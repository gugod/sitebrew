#!/bin/sh
#! -*- perl -*-
eval 'exec perl -x -wS $0 ${1+"$@"}'
    if 0;

use v5.14;
use FindBin;
use lib "$FindBin::Bin/lib";

use Text::Xslate;
use IO::All -utf8;
use YAML;
use DateTime::Format::Mail;

use Sitebrew;
use Sitebrew::Article;

Sitebrew->initialize(app_root => io->curdir->absolute->name);

sub markdown_file :lvalue {
    state $markdown_file
}

sub html_file {
    markdown_file =~ s/\.md$/.html/r =~ s/^content/public/r;
}

sub github_markup {
    my $text = shift;

    $text =~ s{(?<!`)\[\[([^\n]+?)\]\](?!`)}{
        my $label = $1;
        my $page = $1 =~ s{ }{-}gr =~ s{/}{-}gr;

        "[$label]($page.html)"
    }eg;

    return $text;
}

sub build_one {
    my $article = Sitebrew::Article->new( content_file => markdown_file );
    my $title = $article->title;

    my $tx = Text::Xslate->new( path => ['views', 'layouts']);
    my $html = $tx->render("article.tx", {
        article => {
            published_at => DateTime::Format::Mail->format_datetime($article->published_at),
            title => $article->title,
            body_html => Text::Xslate::mark_raw(
                Sitebrew->markdown( $article->body, { empty_element_suffix => '>' } )
            )
        },
        title => $title
    });

    io(html_file)->assert->print($html);
}

markdown_file = shift @ARGV or die <<USAGE;

sitebrew-one <path-to-markdown-file>

USAGE

die "File does not exist\n" unless -f markdown_file;

build_one;

say "BUILD " . html_file;

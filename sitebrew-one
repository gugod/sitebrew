#!/bin/sh
#! -*- perl -*-
eval 'exec perl -x -wS $0 ${1+"$@"}'
    if 0;

use v5.14;

use strict;
use warnings;
use File::Find;
use Text::Markdown qw(markdown);
use Text::Xslate;
use IO::All -utf8;
use YAML;

sub markdown_file :lvalue {
    state $markdown_file
}

sub html_file {
    markdown_file =~ s/\.md$/.html/r =~ s/^content/public/r;
}

sub github_markup {
    my $text = shift;

    $text =~ s{(?<!`)\[\[([^\n]+?)\]\](?!`)}{
        my $label = $1;
        my $page = $1 =~ s{ }{-}gr =~ s{/}{-}gr;

        "[$label]($page.html)"
    }eg;

    return $text;
}

sub build_one {
    my $text = github_markup(io(markdown_file)->all);

    my $title = "Untitled";
    $text =~ s/^# (.+)$//m and $title = $1;

    my $tx = Text::Xslate->new( path => ['views', 'layouts']);
    my $html = $tx->render("article.tx", {
        article_content => Text::Xslate::mark_raw(markdown( $text, { empty_element_suffix => '>' } )),
        title => $title
    });

    io(html_file)->assert->print($html);
}

markdown_file = shift @ARGV or die <<USAGE;

sitebrew-one <path-to-markdown-file>

USAGE

die "File does not exist\n" unless -f markdown_file;

build_one;

say "DONE " . html_file;

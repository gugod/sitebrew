#!/usr/bin/env perl
use v5.14;
use FindBin;
use lib "$FindBin::Bin/lib";

use IO::All -utf8; # io()
use File::Find qw(find);
use File::Copy qw(copy);
use YAML;
use List::MoreUtils qw(any);

use Parallel::ForkManager;

use Sitebrew;
use Sitebrew::Article;

my $app_root = $ENV{SITEBREW_ROOT} || io->curdir->absolute->name;
Sitebrew->initialize(app_root => $app_root);

sub copy_assets {
    my $source = shift;
    my $destination = $source =~ s/^content/public/r;

    my $x = io->file($destination);
    if ($x->exists && $x->mtime > io($source)->mtime ) {
        # say "SKIP $source => $destination";
    }
    else {
        say "COPY $source => $destination";
        io->dir("".file($destination)->parent)->mkpath;
        copy($source, $destination)
            or die "copy failed: $!";

        say "COPY $source => $destination";
    }
}

sub build_all {
    my @articles = Sitebrew::Article->all;

    my @view_mtime = ( io("views/article.tx")->mtime );

    for (qw(article default)) {
        my $f = io("views/$_-layout.tx");
        if ($f->exists) {
            push @view_mtime, $f->mtime
        }
    }

    my $builder_sub = sub {
        my $markdown_file = shift;
        my $html_file  = $markdown_file =~ s/\.md$/.html/r =~ s/^content/public/r;
        my $html_mtime = io($html_file)->mtime;
        my $markdown_mtime = io($markdown_file)->mtime;

        if (!-f $html_file || $markdown_mtime > $html_mtime || any { $html_mtime < $_ } @view_mtime) {
            system $^X, "$FindBin::RealBin/sitebrew-one", $markdown_file;
        }
    };


    my $articles_count = @articles;
    my $worker_count = 4;
    my $forkman = Parallel::ForkManager->new( $worker_count );
    for (1..$worker_count) {
        my $pid = $forkman->start and next;
        for (my $i = 0; $i < $articles_count; $i += $worker_count) {
            $builder_sub->( $articles[$i]->content_file )
        }
        $forkman->finish;
    }
    $forkman->wait_all_children;

    find +{
        wanted => sub {
            return if !-f || /\.DS_Store/ || /\.git/ || /(\.md|_attributes\.yml)\z/ || $File::Find::dir =~ /(sass|\.git)/;
            copy_assets($File::Find::name);
        },
        no_chdir => 1,
        follow => 1
    }, "content";

    say 'ALL DONE';
}

build_all;


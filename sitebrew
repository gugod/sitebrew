#!/usr/bin/env perl
use v5.14;
use FindBin;
use lib "$FindBin::Bin/lib";

use File::Find;
use Text::Markdown qw(markdown);
use IO::All -utf8;
use File::Copy;
use YAML;

use Sitebrew;
use Sitebrew::Article;

Sitebrew->initialize(app_root => io->curdir->absolute->name);

sub markdown_file :lvalue {
    state $markdown_file
}

sub html_file {
    markdown_file =~ s/\.md$/.html/r =~ s/^content/public/r;
}

sub build_markdown {
    markdown_file = shift;

    if (-f html_file
        && io(html_file)->mtime > io(markdown_file)->mtime
        && io(html_file)->mtime > io("views/article.tx")->mtime) {

        say "SKIP " . markdown_file . " => " . html_file;
        return;
    }

    system "sitebrew-one", markdown_file;

    say "BUILD " . markdown_file . " => " . html_file;
}

sub copy_assets {
    my $source = shift;
    my $destination = $source =~ s/^content/public/r;

    my $x = io->file($destination);
    if ($x->exists && $x->mtime > io($source)->mtime ) {
        say "SKIP $source => $destination";
    }
    else {
        copy($source, $destination)
            or die "copy failed: $!";

        say "COPY $source => $destination";
    }
}

sub build_all {
    find +{
        wanted => sub {
            return if !-f || /\.DS_Store/ || /\.git/ || /(\.md|_attributes\.yml)\z/ || $File::Find::dir =~ /(sass|\.git)/;
            copy_assets($File::Find::name);
        },
        no_chdir => 1,
        follow => 1
    }, "content";

    Sitebrew::Article->each(
        sub {
            my ($article) = @_;
            build_markdown( $article->content_file );
        }
    );

    say 'ALL DONE';
}

build_all;
